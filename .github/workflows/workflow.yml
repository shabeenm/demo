name: Flutter Test and Release

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  flutter_test:
    name: Flutter Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Get dependencies
        run: flutter pub get
      - name: Run analyze
        run: flutter analyze
      - name: Run test cases
        run: flutter test

  build_android:
    name: Flutter Release - Android
    runs-on: macos-latest
    needs: [ flutter_test ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Get dependencies
        run: flutter pub get
      - name: Clean build
        run: flutter clean
      - name: Build APK
        run: flutter build apk --debug --split-per-abi
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/debug/*"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.MY_TOKEN }}
      - name: Build Bundle
        run: flutter build appbundle --release
      - name: Push to Releases Bundle
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/*"
          tag: release-v1.0.${{ github.run_number }}
          token: ${{ secrets.MY_TOKEN }}

  build_ios:
    name: Flutter Release - iOS
    runs-on: macos-latest
    needs: [ flutter_test ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Get dependencies
        run: flutter pub get
      - name: Clean build
        run: flutter clean
      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update
      - name: Build iOS app
        run: flutter build ipa --export-options-plist=ios/ExportOptions.plist
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/ios/ipa/*"
          tag: ios-release_v1.0.${{ github.run_number }}
          token: ${{ secrets.MY_TOKEN }}
